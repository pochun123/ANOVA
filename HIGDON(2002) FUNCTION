library(DiceOptim)
library(lhs)

#直接用單點找最小值
a <- seq(0, 10, by = 0.0000001)
fun <- function(s){
  sin(2*pi*s/10)+0.2*sin(2*pi*s/2.5)
}
w <- fun(a)
mina <- a[which(w == min(w))]


#畫出函數圖形並標記出最小值
optimSol <- list(x = mina, y = fun(mina))
x_grid <- as.matrix(seq(0, 10, length = 20000))
y_grid <- apply(x_grid, 1, fun)

plot(x_grid, y_grid, type = "l", col = "darkblue", lwd = 2,
xlab = "x", ylab = "f(x)")
points(optimSol$x, optimSol$y, pch = 17, col = 2)

legend("topright", c("f(x)", "Optim"), bty = "n",
pch = c(NA, 17), col = c("darkblue", 2),lty = c(1, NA), lwd = c(2, NA))


#最初的樣本點
n <- 5
#函數維度
d <- 1 
set.seed(1)

#利用拉丁方格設計決定初始樣本(範圍為(0,10))
X <- lhs::optimumLHS(n,d)*10
train_y <- as.matrix(apply(X, 1, fun))
train_x <- data.frame(x=X)

#配適DACE模型(Gaussian process)
fit <- km(design=train_x,response =train_y,covtype="gauss", nugget.estim=TRUE)

pred_y <- predict(fit, data.frame(x=x_grid),type="UK")

#目前的最佳解(最小值)
bestloc<-which.min(train_y)


#畫出DACE模型與真正的函數比較並標出目前的最小值
plot(x_grid,y_grid,type="l",col="darkblue",lwd=2,xlab="x",ylab="f(x)")

points(optimSol$x,optimSol$y,pch = 17,col="darkorange3")
points(x_grid,pred_y$mean,type= "l",col="grey30",lwd=2)
points(train_x$x,train_y,pch=15,cex=1.2,col="grey30")
points(train_x$x[bestloc],train_y[bestloc],pch=16,cex=1,col="gold")

legend("topright", c("f(x)","GP","Init.Design","Optim"),bty="n",
pch=c(NA,NA,15,17),col= c("darkblue","grey30","grey30",     "darkorange3"),lty=c(1,1,NA,NA),lwd=c(2,2,NA,NA))


#計算EI
EI_values <- apply(x_grid,1,EI,fit,type="UK")
mloc <- which.max(EI_values)

#畫出函數中各點的EI
par(mfrow=c(2,1))
par(mar= c(.1,4,4,2))
plot(x_grid,y_grid,type="l",col="darkblue",lwd=2,
xlab="x",ylab="f(x)")
points(optimSol$x,optimSol$y,pch = 17,col="darkorange3")
points(x_grid,pred_y$mean,type= "l",col="grey30",lwd=2)
points(train_x$x,train_y,pch=15,cex=1.2,col="grey30")
points(train_x$x[bestloc],train_y[bestloc],pch=16,cex=0.5,col="gold")

legend("topright", c("f(x)","GP","Init.Design","Optim"),bty="n",
pch=c(NA,NA,15,17),col= c("darkblue","grey30","grey30","darkorange3"),
lty=c(1,1,NA,NA),lwd=c(2,2,NA,NA))

par(mar= c(5,4,.1,2))
plot(x_grid,EI_values,type="l",col="black",
xlab="x",ylab="EI")
points(x_grid[mloc],EI_values[mloc],pch=16,col="red")

arrows(x_grid[mloc],EI_values[mloc],x_grid[mloc],0,code=0,col="red")
text(x_grid[mloc],0,"new",col="red")



#迭代
seqOptim <- function(design,response,candidates){
  model <- km(design=design,response=response,covtype="gauss",
  nugget.estim=TRUE)
  EI_values <- apply(candidates,1,EI,model,type="SK")
  mloc <- which.max(EI_values)
  return(list(design=design,response=response,
  model = model, EI_values = EI_values,
  new_x = candidates[mloc]))
}



n <- 5 
d <- 1 
set.seed(1)
init_X <- lhs::optimumLHS(n,d)*10
init_y <- as.matrix(apply(init_X,1,fun))
train_x <- data.frame(x=init_X)
train_y <- init_y

bestloc <- which.min(train_y)

#迭帶次數
nIter <- 10
results <- vector("list",nIter)
bestHist <- matrix(0,nIter+1,d + 1)
colnames(bestHist) <- c(sprintf("x%d",1:d),"y")
bestHist[1,] <- c(train_x[bestloc,],train_y[bestloc])


for(i in 1:nIter){
  out <- seqOptim(design=train_x,response=train_y,candidates=x_grid)
  results[[i]]<-out
  #EI最大的點x
  new_x<-out$new_x
  new_y<-fun(new_x)

  #將新的點加入資料
  train_x <-rbind(train_x,new_x)
  train_y<-c(train_y,new_y)
  bestloc<-which.min(train_y)
  bestHist[i+1,]<-c(train_x[bestloc,],train_y[bestloc])
}

#畫圖
lay <- layout(rbind(matrix(1:4,2, 2), matrix(5:8,2,2)))

for(i in 1:nIter){
  pred_y <- predict(results[[i]]$model, data.frame(x=x_grid),type="UK")
  EI_values <- results[[i]]$EI_values
  curr_x <- results[[i]]$design
  curr_y <- results[[i]]$response
  bestloc <- which.min(curr_y)
  mloc <- which.max(EI_values)
  par(mar= c(.1,4,4,2))
  plot(x_grid,y_grid,type="l", col="blue",lwd=2,
  xlab="x",ylab="f(x)",main=sprintf("Iteration%d",i))
  points(optimSol$x,optimSol$y,pch =17,col="darkorange3")

  points(x_grid,pred_y$mean,type = "l",col="#666666",lwd=2)
  points(curr_x$x,curr_y,pch=15, cex=1.2,col="#666666")
  points(curr_x$x[bestloc],curr_y[bestloc],pch=16,cex=0.5,col="gold1")

  legend("topright", c("f(x)","GP","Design","Optim"),bty="n",
  pch= c(NA,NA,15,17),col= c("blue","#666666","#666666","darkorange3"),
  lty= c(1,1,NA,NA),lwd=c(1,1,NA,NA), cex = 0.75)

  par(mar= c(5,4,.1,2))
  plot(x_grid,EI_values,type ="l",col="black",
  xlab="x",ylab="EI")
  points(x_grid[mloc],EI_values[mloc],pch=16,col="red")
  arrows(x_grid[mloc],EI_values[mloc],x_grid[mloc],0,code=0,col="red")
  text(x_grid[mloc],0,"new",col="red")
  par(mar= c(5,4,4,2) + .1)
}

